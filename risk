

	 local DINOHUB = Instance.new("ScreenGui")
     local OPENCLOSE = Instance.new("TextButton")
     
     
     DINOHUB.Name = "DINOHUB"
     DINOHUB.Parent = game.CoreGui
     DINOHUB.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
     
     OPENCLOSE.Name = "OPENCLOSE"
     OPENCLOSE.Parent = DINOHUB
     OPENCLOSE.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
     OPENCLOSE.BorderSizePixel = 0
     OPENCLOSE.Position = UDim2.new(0.08233337, 0, 0.0952890813, 0)
     OPENCLOSE.Size = UDim2.new(0.0447916649, 0, 0.0845824406, 0)
     OPENCLOSE.Font = Enum.Font.DenkOne
     OPENCLOSE.Text = "Close"
     OPENCLOSE.TextColor3 = Color3.fromRGB(255, 255, 255)
     OPENCLOSE.TextScaled = true
     OPENCLOSE.TextSize = 14.000
     OPENCLOSE.TextWrapped = true
     OPENCLOSE.MouseButton1Click:Connect(function()
         game.CoreGui:FindFirstChild("DinoUI").Enabled = not game.CoreGui:FindFirstChild("DinoUI").Enabled
     end)
     do
         if game:GetService("CoreGui"):FindFirstChild("DinoUI") then
             game:GetService("CoreGui").DinoUI:Destroy()
         end
     end
     local TweenService = game:GetService("TweenService")
     local UserInputService = game:GetService("UserInputService")
     local Dino = {}
     
     function Dino:CreateWindow(dinotitle)
         local DinoUI = Instance.new("ScreenGui")
         local Window = Instance.new("Frame")
         local DinoHubText1 = Instance.new("TextLabel")
         local DinoHubText2 = Instance.new("TextLabel")
         local WindowText = Instance.new("TextLabel")
         local TabWindow = Instance.new("ScrollingFrame")
         local TabWindowList = Instance.new("UIListLayout")
         local ContainerHolder = Instance.new("Frame")
         
         --Properties:
         
         DinoUI.Name = "DinoUI"
         DinoUI.Parent = game.CoreGui
         DinoUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
         
         Window.Name = "Window"
         Window.Parent = DinoUI
         Window.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
         Window.BorderSizePixel = 0
         Window.Position = UDim2.new(0, 392, 0, 264)
         Window.Size = UDim2.new(0, 390, 0, 350)
         
         DinoHubText1.Name = "DinoHubText1"
         DinoHubText1.Parent = Window
         DinoHubText1.BackgroundColor3 = Color3.fromRGB(0, 255, 155)
         DinoHubText1.BackgroundTransparency = 1.000
         DinoHubText1.BorderSizePixel = 0
         DinoHubText1.Position = UDim2.new(0, 30, 0, 0)
         DinoHubText1.Size = UDim2.new(0, 35, 0, 20)
         DinoHubText1.Font = Enum.Font.GothamSemibold
         DinoHubText1.Text = "AutoConfetti"
         DinoHubText1.TextColor3 = Color3.fromRGB(0, 255, 155)
         DinoHubText1.TextSize = 13.000
         
         DinoHubText2.Name = "DinoHubText2"
         DinoHubText2.Parent = Window
         DinoHubText2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         DinoHubText2.BackgroundTransparency = 1.000
         DinoHubText2.BorderSizePixel = 0
         DinoHubText2.Position = UDim2.new(0, 40, 0, 0)
         DinoHubText2.Size = UDim2.new(0, 35, 0, 20)
         DinoHubText2.Font = Enum.Font.GothamSemibold
         DinoHubText2.Text = ""
             DinoHubText2.TextColor3 = Color3.fromRGB(255, 255, 255)
         DinoHubText2.TextSize = 13.000
         
         WindowText.Name = "WindowText"
         WindowText.Parent = Window
         WindowText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         WindowText.BackgroundTransparency = 1.000
         WindowText.BorderSizePixel = 0
         WindowText.Position = UDim2.new(0, 85, 0, 0)
         WindowText.Size = UDim2.new(0, 305, 0, 20)
         WindowText.Font = Enum.Font.GothamSemibold
         WindowText.Text = dinotitle or "Game Title"
         WindowText.TextColor3 = Color3.fromRGB(150, 150, 150)
         WindowText.TextSize = 13.000
         WindowText.TextXAlignment = Enum.TextXAlignment.Left
         
         TabWindow.Name = "TabWindow"
         TabWindow.Parent = Window
         TabWindow.Active = true
         TabWindow.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
         TabWindow.BorderSizePixel = 0
         TabWindow.Position = UDim2.new(0, 7, 0, 20)
         TabWindow.Size = UDim2.new(0, 375, 0, 20)
         TabWindow.CanvasSize = UDim2.new(2, 0, 0, 0)
         TabWindow.ScrollBarThickness = 2
         
         TabWindowList.Name = "TabWindowList"
         TabWindowList.Parent = TabWindow
         TabWindowList.FillDirection = Enum.FillDirection.Horizontal
         TabWindowList.SortOrder = Enum.SortOrder.LayoutOrder
         
         ContainerHolder.Name = "ContainerHolder"
         ContainerHolder.Parent = Window
         ContainerHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
         ContainerHolder.BorderSizePixel = 0
         ContainerHolder.Position = UDim2.new(0, 0, 0, 40)
         ContainerHolder.Size = UDim2.new(0, 390, 0, 310)
     
         -- Don't Touch This Script Or It Will Mess Up --
     
         TabWindow.CanvasSize = UDim2.new(0, 0 + TabWindowList.AbsoluteContentSize.X, 0, 0)
         TabWindowList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
             TabWindow.CanvasSize = UDim2.new(0, 0 + TabWindowList.AbsoluteContentSize.X, 0, 0)
         end)
     
         local gui = Window
         
         local dragging
         local dragInput
         local dragStart
         local startPos
         
         local function update(input)
             local delta = input.Position - dragStart
             gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
         end
         
         gui.InputBegan:Connect(function(input)
             if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                 dragging = true
                 dragStart = input.Position
                 startPos = gui.Position
                 
                 input.Changed:Connect(function()
                     if input.UserInputState == Enum.UserInputState.End then
                         dragging = false
                     end
                 end)
             end
         end)
         
         gui.InputChanged:Connect(function(input)
             if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                 dragInput = input
             end
         end)
         
         UserInputService.InputChanged:Connect(function(input)
             if input == dragInput and dragging then
                 update(input)
             end
         end)
     
         local DinoWindow = {}
     
         function DinoWindow:NewPage(pagetitle)
             local Container = Instance.new("ScrollingFrame")
             local ContainerList = Instance.new("UIListLayout")
             
             --Properties:
             
             Container.Name = pagetitle or "Container"
             Container.Parent = ContainerHolder
             Container.Active = true
             Container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
             Container.BorderSizePixel = 0
             Container.Position = UDim2.new(0, 5, 0, 5)
             Container.Size = UDim2.new(0, 380, 0, 300)
             Container.Visible = false
             Container.CanvasSize = UDim2.new(0, 0, 0, 5 + ContainerList.Padding.Offset + ContainerList.AbsoluteContentSize.Y)
             Container.ScrollBarThickness = 2
             
             ContainerList.Name = "ContainerList"
             ContainerList.Parent = Container
             ContainerList.HorizontalAlignment = Enum.HorizontalAlignment.Center
             ContainerList.SortOrder = Enum.SortOrder.LayoutOrder
             ContainerList.Padding = UDim.new(0, 5)
     
             -- Don't Touch This Script Or It Will Mess Up --
             ContainerList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                 Container.CanvasSize = UDim2.new(0, 0, 0, 0 + ContainerList.Padding.Offset + ContainerList.AbsoluteContentSize.Y)
             end)
             
             Container.ChildAdded:Connect(function()
                 Container.CanvasSize = UDim2.new(0, 0, 0, 0 + ContainerList.Padding.Offset + ContainerList.AbsoluteContentSize.Y)
             end)
     
             local TabButton = Instance.new("TextButton")
     
             --Properties:
             
             TabButton.Name = "TabButton"
             TabButton.Parent = TabWindow
             TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
             TabButton.BackgroundTransparency = 1.000
             TabButton.BorderSizePixel = 0
             TabButton.Position = UDim2.new(0, 5, 0, 0)
             TabButton.Size = UDim2.new(0, 100, 0, 20)
             TabButton.Font = Enum.Font.GothamSemibold
             TabButton.Text = pagetitle or "Tab"
             TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
             TabButton.TextSize = 13.000
     
             -- Don't Touch This Script Or It Will Mess Up --
     
             TabButton.Size = UDim2.new(0, 10 + TabButton.TextBounds.X, 0, 20)
             
             TabButton.MouseButton1Click:Connect(function()
                 for _, co in pairs(ContainerHolder:GetChildren()) do
                     if co:IsA("ScrollingFrame") then
                         co.Visible = false
                     end
                 end
                 for _, tb in pairs(TabWindow:GetChildren()) do
                     if tb:IsA("TextButton") then
                         TweenService:Create(tb, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                     end
                 end
                 TweenService:Create(TabButton, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(125, 125, 125)}):Play()
                 Container.Visible = true
             end)
     
             local DinoPage = {}
     
             function DinoPage:NewSection(sectiontitle)
                 local Section = Instance.new("Frame")
                 local SectionTitle = Instance.new("TextLabel")
                 local SectionIn = Instance.new("Frame")
                 local SectionInUICorner = Instance.new("UICorner")
                 local SectionInList = Instance.new("UIListLayout")
                 
                 --Properties:
                 
                 Section.Name = sectiontitle or "Section"
                 Section.Parent = Container
                 Section.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                 Section.Position = UDim2.new(0.0263157897, 0, 0, 0)
                 Section.Size = UDim2.new(0, 360, 0, 20)
                 
                 SectionTitle.Name = "SectionTitle"
                 SectionTitle.Parent = Section
                 SectionTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                 SectionTitle.BackgroundTransparency = 1.000
                 SectionTitle.BorderSizePixel = 0
                 SectionTitle.Size = UDim2.new(0, 360, 0, 15)
                 SectionTitle.Font = Enum.Font.GothamSemibold
                 SectionTitle.Text = sectiontitle or "Section"
                 SectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                 SectionTitle.TextSize = 13.000
                 
                 SectionIn.Name = "SectionIn"
                 SectionIn.Parent = Section
                 SectionIn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                 SectionIn.BorderSizePixel = 0
                 SectionIn.Position = UDim2.new(0, 0, 0, 20)
                 SectionIn.Size = UDim2.new(0, 360, 0, 70)
                 
                 SectionInUICorner.CornerRadius = UDim.new(0, 2)
                 SectionInUICorner.Name = "SectionInUICorner"
                 SectionInUICorner.Parent = SectionIn
                 
                 SectionInList.Name = "SectionInList"
                 SectionInList.Parent = SectionIn
                 SectionInList.HorizontalAlignment = Enum.HorizontalAlignment.Center
                 SectionInList.SortOrder = Enum.SortOrder.LayoutOrder
                 SectionInList.Padding = UDim.new(0, 10)
     
                 -- Don't Touch This Script Or It Will Mess Up --
     
                 SectionIn.Size = UDim2.new(0, 360, 0, 5 + SectionInList.AbsoluteContentSize.Y + SectionInList.Padding.Offset)
                 SectionInList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                     SectionIn.Size = UDim2.new(0, 360, 0, 5 + SectionInList.AbsoluteContentSize.Y + SectionInList.Padding.Offset)
                 end)
                 
                 local function ContainerSizeChange()
                     local largestListSize = 0
                     largestListSize = SectionInList.AbsoluteContentSize.Y
                     
                     Container.CanvasSize = UDim2.new(0, 0, 0, largestListSize + 35 + SectionInList.Padding.Offset)
                 end
                 local function sectionsizechange()
                     Section.Size = UDim2.new(0, 360, 0, 20 + SectionInList.AbsoluteContentSize.Y + SectionInList.Padding.Offset)
                 end
                 ContainerSizeChange()
                 sectionsizechange()
     
                 SectionInList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                     ContainerSizeChange()
                     sectionsizechange()
                 end)
     
                 local DinoElement = {}
     
                 function DinoElement:CreateButton(buttontitle, buttoncallback)
                     local ButtonHolder = Instance.new("TextButton")
                     local ButtonHolderUICorner = Instance.new("UICorner")
                     local ButtonHolderUIStroke = Instance.new("UIStroke")
                     local ButtonImage = Instance.new("ImageLabel")
                     
                     ButtonHolder.Name = buttontitle or "ButtonHolder"
                     ButtonHolder.Parent = SectionIn
                     ButtonHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     ButtonHolder.BorderSizePixel = 0
                     ButtonHolder.Position = UDim2.new(0, 5, 0, 0)
                     ButtonHolder.Size = UDim2.new(0, 350, 0, 25)
                     ButtonHolder.AutoButtonColor = false
                     ButtonHolder.Font = Enum.Font.GothamSemibold
                     ButtonHolder.Text = buttontitle or "Button | Click Me"
                     ButtonHolder.TextColor3 = Color3.fromRGB(255, 255, 255)
                     ButtonHolder.TextSize = 13.000
                     
                     ButtonHolderUICorner.CornerRadius = UDim.new(0, 4)
                     ButtonHolderUICorner.Name = "ButtonHolderUICorner"
                     ButtonHolderUICorner.Parent = ButtonHolder
                     
                     ButtonHolderUIStroke.Name = "ButtonHolderUIStroke"
                     ButtonHolderUIStroke.Parent = ButtonHolder
                     ButtonHolderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                     ButtonHolderUIStroke.Color = Color3.fromRGB(255, 255, 255)
                     ButtonHolderUIStroke.LineJoinMode = Enum.LineJoinMode.Round
                     ButtonHolderUIStroke.Thickness = 1.6
                     ButtonHolderUIStroke.Transparency = 0
                     ButtonHolderUIStroke.Enabled = true
                     ButtonHolderUIStroke.Archivable = true
                     
                     ButtonImage.Name = "ButtonImage"
                     ButtonImage.Parent = ButtonHolder
                     ButtonImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     ButtonImage.BackgroundTransparency = 1.000
                     ButtonImage.BorderSizePixel = 0
                     ButtonImage.Position = UDim2.new(0, 5, 0, 3)
                     ButtonImage.Size = UDim2.new(0, 18, 0, 18)
                     ButtonImage.Image = "rbxassetid://11417570443"
                     ButtonImage.ImageColor3 = Color3.fromRGB(255, 255, 255)
     
                     -- Don't Touch This Script Or It Will Mess Up --
     
                     ButtonHolder.MouseEnter:Connect(function()
                         TweenService:Create(ButtonHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(125, 125, 125)}):Play()
                         TweenService:Create(ButtonImage, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 = Color3.fromRGB(125, 125, 125)}):Play()
                     end)
                     ButtonHolder.MouseLeave:Connect(function()
                         TweenService:Create(ButtonHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                         TweenService:Create(ButtonImage, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                         TweenService:Create(ButtonHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 350, 0, 25)}):Play()
                     end)
                     ButtonHolder.MouseButton1Down:Connect(function()
                         TweenService:Create(ButtonHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 345, 0, 23)}):Play()
                     end)
                     ButtonHolder.MouseButton1Up:Connect(function()
                         TweenService:Create(ButtonHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 350, 0, 25)}):Play()
                     end)
                     ButtonHolder.MouseButton1Click:Connect(function()
                         pcall(function()
                             buttoncallback()
                         end)
                     end)
     
                 end
     
                 function DinoElement:CreateToggle(toggletitle, togglecallback)
                     local ToggleHolder = Instance.new("Frame")
                     local ToggleHolderUICorner = Instance.new("UICorner")
                     local ToggleImage = Instance.new("ImageLabel")
                     local ToggleTitle = Instance.new("TextLabel")
                     local ToggleOut = Instance.new("ImageLabel")
                     local ToggleOutUICorner = Instance.new("UICorner")
                     local ToggleIn = Instance.new("ImageLabel")
                     local ToggleInUICorner = Instance.new("UICorner")
                     local ToggleHolderButton = Instance.new("TextButton")
                     local ToggleHolderUIStroke = Instance.new("UIStroke")
                     
                     --Properties:
                     
                     ToggleHolder.Name = toggletitle or "ToggleHolder"
                     ToggleHolder.Parent = SectionIn
                     ToggleHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     ToggleHolder.BorderSizePixel = 0
                     ToggleHolder.Size = UDim2.new(0, 350, 0, 25)
                     
                     ToggleHolderUICorner.CornerRadius = UDim.new(0, 1)
                     ToggleHolderUICorner.Name = "ToggleHolderUICorner"
                     ToggleHolderUICorner.Parent = ToggleHolder
                     
                     ToggleImage.Name = "ToggleImage"
                     ToggleImage.Parent = ToggleHolder
                     ToggleImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     ToggleImage.BackgroundTransparency = 1.000
                     ToggleImage.BorderSizePixel = 0
                     ToggleImage.Position = UDim2.new(0, 5, 0, 3)
                     ToggleImage.Size = UDim2.new(0, 18, 0, 18)
                     ToggleImage.Image = "rbxassetid://11417570443"
                     ToggleImage.ImageColor3 = Color3.fromRGB(200, 200, 200)
                     
                     ToggleTitle.Name = "ToggleTitle"
                     ToggleTitle.Parent = ToggleHolder
                     ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     ToggleTitle.BackgroundTransparency = 1.000
                     ToggleTitle.BorderSizePixel = 0
                     ToggleTitle.Position = UDim2.new(0, 25, 0, 0)
                     ToggleTitle.Size = UDim2.new(0, 250, 0, 25)
                     ToggleTitle.Font = Enum.Font.GothamSemibold
                     ToggleTitle.Text = toggletitle or "Toggle | Toggle Me !"
                     ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                     ToggleTitle.TextSize = 13.000
                     ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
                     
                     ToggleOut.Name = "ToggleOut"
                     ToggleOut.Parent = ToggleHolder
                     ToggleOut.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                     ToggleOut.Position = UDim2.new(0, 310, 0, 4)
                     ToggleOut.Size = UDim2.new(0, 34, 0, 16)
                     ToggleOut.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
                     ToggleOut.ImageTransparency = 1.000
                     
                     ToggleOutUICorner.CornerRadius = UDim.new(0, 1000)
                     ToggleOutUICorner.Name = "ToggleOutUICorner"
                     ToggleOutUICorner.Parent = ToggleOut
                     
                     ToggleIn.Name = "ToggleIn"
                     ToggleIn.Parent = ToggleOut
                     ToggleIn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     ToggleIn.Position = UDim2.new(0, 2, 0, 2)
                     ToggleIn.Size = UDim2.new(0, 12, 0, 12)
                     ToggleIn.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
                     ToggleIn.ImageTransparency = 1.000
                     
                     ToggleInUICorner.CornerRadius = UDim.new(0, 1000)
                     ToggleInUICorner.Name = "ToggleInUICorner"
                     ToggleInUICorner.Parent = ToggleIn
                     
                     ToggleHolderButton.Name = "ToggleHolderButton"
                     ToggleHolderButton.Parent = ToggleHolder
                     ToggleHolderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     ToggleHolderButton.BackgroundTransparency = 1.000
                     ToggleHolderButton.BorderSizePixel = 0
                     ToggleHolderButton.Size = UDim2.new(0, 350, 0, 25)
                     ToggleHolderButton.ZIndex = 2
                     ToggleHolderButton.Font = Enum.Font.SourceSans
                     ToggleHolderButton.Text = ""
                     ToggleHolderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                     ToggleHolderButton.TextSize = 14.000
     
                     ToggleHolderUIStroke.Name = "ToggleHolderUIStroke"
                     ToggleHolderUIStroke.Parent = ToggleHolder
                     ToggleHolderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                     ToggleHolderUIStroke.Color = Color3.fromRGB(255, 255, 255)
                     ToggleHolderUIStroke.LineJoinMode = Enum.LineJoinMode.Round
                     ToggleHolderUIStroke.Thickness = 1.6
                     ToggleHolderUIStroke.Transparency = 0
                     ToggleHolderUIStroke.Enabled = true
                     ToggleHolderUIStroke.Archivable = true
     
                     -- Don't Touch This Script Or It Will Mess Up --
     
                     local toggled = false
                     ToggleHolderButton.MouseEnter:Connect(function()
                         TweenService:Create(ToggleTitle, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(125, 125, 125)}):Play()
                         TweenService:Create(ToggleImage, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 = Color3.fromRGB(125, 125, 125)}):Play()
                     end)
                     ToggleHolderButton.MouseLeave:Connect(function()
                         TweenService:Create(ToggleTitle, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                         TweenService:Create(ToggleImage, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                         TweenService:Create(ToggleHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 350, 0, 25)}):Play()
                     end)
                     ToggleHolderButton.MouseButton1Down:Connect(function()
                         TweenService:Create(ToggleHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 345, 0, 23)}):Play()
                     end)
                     ToggleHolderButton.MouseButton1Up:Connect(function()
                         TweenService:Create(ToggleHolder, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 350, 0, 25)}):Play()
                     end)
                     ToggleHolderButton.MouseButton1Click:Connect(function()
                         if toggled then
                             TweenService:Create(ToggleIn, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Position = UDim2.new(0, 2, 0, 2)}):Play()
                             toggled = false
                             pcall(function()
                                 togglecallback(toggled)
                             end)
                         else
                             TweenService:Create(ToggleIn, TweenInfo.new(0.12, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Position = UDim2.new(0, 20, 0, 2)}):Play()
                             toggled = true
                             pcall(function()
                                 togglecallback(toggled)
                             end)
                         end
                     end)
                     
                 end
     
                 function DinoElement:CreateSlider(slidertitle, minvalue, maxvalue, callback)
                     local SliderHolder = Instance.new("Frame")
                     local SliderHolderUICorner = Instance.new("UICorner")
                     local SliderImage = Instance.new("ImageLabel")
                     local SliderHolderTitle = Instance.new("TextLabel")
                     local SliderButton = Instance.new("ImageButton")
                     local SliderButtonUICorner = Instance.new("UICorner")
                     local SliderIn = Instance.new("ImageLabel")
                     local SliderInUICorner = Instance.new("UICorner")
                     local Val = Instance.new("TextLabel")
                     local SliderHolderUIStroke = Instance.new("UIStroke")
                     
                     --Properties:
                     
                     SliderHolder.Name = slidertitle or "SliderHolder"
                     SliderHolder.Parent = SectionIn
                     SliderHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     SliderHolder.BorderSizePixel = 0
                     SliderHolder.Position = UDim2.new(0, 5, 0, 60)
                     SliderHolder.Size = UDim2.new(0, 350, 0, 40)
                     
                     SliderHolderUICorner.CornerRadius = UDim.new(0, 1)
                     SliderHolderUICorner.Name = "SliderHolderUICorner"
                     SliderHolderUICorner.Parent = SliderHolder
                     
                     SliderImage.Name = "SliderImage"
                     SliderImage.Parent = SliderHolder
                     SliderImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     SliderImage.BackgroundTransparency = 1.000
                     SliderImage.BorderSizePixel = 0
                     SliderImage.Position = UDim2.new(0, 5, 0, 3)
                     SliderImage.Size = UDim2.new(0, 18, 0, 18)
                     SliderImage.Image = "rbxassetid://11417570443"
                     SliderImage.ImageColor3 = Color3.fromRGB(200, 200, 200)
                     
                     SliderHolderTitle.Name = "SliderHolderTitle"
                     SliderHolderTitle.Parent = SliderHolder
                     SliderHolderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     SliderHolderTitle.BackgroundTransparency = 1.000
                     SliderHolderTitle.BorderSizePixel = 0
                     SliderHolderTitle.Position = UDim2.new(0, 25, 0, 0)
                     SliderHolderTitle.Size = UDim2.new(0, 250, 0, 25)
                     SliderHolderTitle.Font = Enum.Font.GothamSemibold
                     SliderHolderTitle.Text = slidertitle or "Slider | Hold Me !"
                     SliderHolderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                     SliderHolderTitle.TextSize = 13.000
                     SliderHolderTitle.TextXAlignment = Enum.TextXAlignment.Left
                     
                     SliderButton.Name = "SliderButton"
                     SliderButton.Parent = SliderHolder
                     SliderButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                     SliderButton.Position = UDim2.new(0, 10, 0, 25)
                     SliderButton.Size = UDim2.new(0, 300, 0, 7)
                     SliderButton.AutoButtonColor = false
                     SliderButton.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
                     SliderButton.ImageTransparency = 1.000
                     
                     SliderButtonUICorner.CornerRadius = UDim.new(0, 1000)
                     SliderButtonUICorner.Name = "SliderButtonUICorner"
                     SliderButtonUICorner.Parent = SliderButton
                     
                     SliderIn.Name = "SliderIn"
                     SliderIn.Parent = SliderButton
                     SliderIn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     SliderIn.Size = UDim2.new(0, 0, 0, 7)
                     SliderIn.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
                     SliderIn.ImageTransparency = 1.000
                     
                     SliderInUICorner.CornerRadius = UDim.new(0, 1000)
                     SliderInUICorner.Name = "SliderInUICorner"
                     SliderInUICorner.Parent = SliderIn
                     
                     Val.Name = "Val"
                     Val.Parent = SliderHolder
                     Val.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     Val.BackgroundTransparency = 1.000
                     Val.BorderSizePixel = 0
                     Val.Position = UDim2.new(0, 282, 0, 0)
                     Val.Size = UDim2.new(0, 60, 0, 25)
                     Val.Font = Enum.Font.GothamSemibold
                     Val.Text = minvalue or "0"
                     Val.TextColor3 = Color3.fromRGB(150, 150, 150)
                     Val.TextSize = 13.000
                     Val.TextXAlignment = Enum.TextXAlignment.Right
     
                     SliderHolderUIStroke.Name = "SliderHolderUIStroke"
                     SliderHolderUIStroke.Parent = SliderHolder
                     SliderHolderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                     SliderHolderUIStroke.Color = Color3.fromRGB(35, 78, 130)
                     SliderHolderUIStroke.LineJoinMode = Enum.LineJoinMode.Round
                     SliderHolderUIStroke.Thickness = 1.6
                     SliderHolderUIStroke.Transparency = 0
                     SliderHolderUIStroke.Enabled = true
                     SliderHolderUIStroke.Archivable = true
     
                     minvalue = minvalue or 0
                     maxvalue = maxvalue or 100
                     
                     
                     -----Callback-----
                     callback = callback or function() end
                     
                     
                     -----Variables-----
                     local mouse = game.Players.LocalPlayer:GetMouse()
                     local uis = game:GetService("UserInputService")
                     local Value;
                     
                     
                     
                     
                     -----Main Code-----
                     
                     SliderButton.MouseButton1Down:Connect(function()
                         Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 300) * SliderIn.AbsoluteSize.X) + tonumber(minvalue)) or 0
                         pcall(function()
                             callback(Value)
                         end)
                         SliderIn.Size = UDim2.new(0, math.clamp(mouse.X - SliderIn.AbsolutePosition.X, 0, 300), 0, 7)
                         moveconnection = mouse.Move:Connect(function()
                             Val.Text = Value
                             Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 300) * SliderIn.AbsoluteSize.X) + tonumber(minvalue))
                             pcall(function()
                                 callback(Value)
                             end)
                             SliderIn.Size = UDim2.new(0, math.clamp(mouse.X - SliderIn.AbsolutePosition.X, 0, 300), 0, 7)
                         end)
                         releaseconnection = uis.InputEnded:Connect(function(Mouse)
                             if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                                 Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 300) * SliderIn.AbsoluteSize.X) + tonumber(minvalue))
                                 pcall(function()
                                     callback(Value)
                                 end)
                                 SliderIn.Size = UDim2.new(0, math.clamp(mouse.X - SliderIn.AbsolutePosition.X, 0, 300), 0, 7)
                                 moveconnection:Disconnect()
                                 releaseconnection:Disconnect()
                             end
                         end)
                     end)
     
                 end
     
                 function DinoElement:CreateTextBox(textboxtitle, textboxplaceholdertitle,textboxcallback)
                     local TextBoxToggle = Instance.new("Frame")
                     local TextBoxToggleUICorner = Instance.new("UICorner")
                     local TextBoxImage = Instance.new("ImageLabel")
                     local TextBoxTitle = Instance.new("TextLabel")
                     local TextBox = Instance.new("TextBox")
                     local TextBoxHolderUIStroke = Instance.new("UIStroke")
                     
                     --Properties:
                     
                     TextBoxToggle.Name = textboxtitle or "TextBoxToggle"
                     TextBoxToggle.Parent = SectionIn
                     TextBoxToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     TextBoxToggle.BorderSizePixel = 0
                     TextBoxToggle.Size = UDim2.new(0, 350, 0, 25)
                     
                     TextBoxToggleUICorner.CornerRadius = UDim.new(0, 1)
                     TextBoxToggleUICorner.Name = "TextBoxToggleUICorner"
                     TextBoxToggleUICorner.Parent = TextBoxToggle
                     
                     TextBoxImage.Name = "TextBoxImage"
                     TextBoxImage.Parent = TextBoxToggle
                     TextBoxImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     TextBoxImage.BackgroundTransparency = 1.000
                     TextBoxImage.BorderSizePixel = 0
                     TextBoxImage.Position = UDim2.new(0, 5, 0, 3)
                     TextBoxImage.Size = UDim2.new(0, 18, 0, 18)
                     TextBoxImage.Image = "rbxassetid://11417570443"
                     TextBoxImage.ImageColor3 = Color3.fromRGB(200, 200, 200)
                     
                     TextBoxTitle.Name = "TextBoxTitle"
                     TextBoxTitle.Parent = TextBoxToggle
                     TextBoxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     TextBoxTitle.BackgroundTransparency = 1.000
                     TextBoxTitle.BorderSizePixel = 0
                     TextBoxTitle.Position = UDim2.new(0, 25, 0, 0)
                     TextBoxTitle.Size = UDim2.new(0, 175, 0, 25)
                     TextBoxTitle.Font = Enum.Font.GothamSemibold
                     TextBoxTitle.Text = textboxtitle or "TextBox"
                     TextBoxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                     TextBoxTitle.TextSize = 13.000
                     TextBoxTitle.TextXAlignment = Enum.TextXAlignment.Left
                     
                     TextBox.Parent = TextBoxToggle
                     TextBox.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                     TextBox.BorderSizePixel = 0
                     TextBox.Position = UDim2.new(0, 210, 0, 4)
                     TextBox.Size = UDim2.new(0, 135, 0, 18)
                     TextBox.Font = Enum.Font.GothamSemibold
                     TextBox.PlaceholderText = textboxplaceholdertitle or "Enter Text"
                     TextBox.Text = ""
                     TextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
                     TextBox.TextSize = 12.000
     
                     TextBoxHolderUIStroke.Name = "TextBoxHolderUIStroke"
                     TextBoxHolderUIStroke.Parent = TextBoxToggle
                     TextBoxHolderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                     TextBoxHolderUIStroke.Color = Color3.fromRGB(255, 255, 255)
                     TextBoxHolderUIStroke.LineJoinMode = Enum.LineJoinMode.Round
                     TextBoxHolderUIStroke.Thickness = 1.6
                     TextBoxHolderUIStroke.Transparency = 0
                     TextBoxHolderUIStroke.Enabled = true
                     TextBoxHolderUIStroke.Archivable = true
     
                     TextBox.FocusLost:Connect(function()
                         pcall(function()
                             textboxcallback(TextBox.Text)
                         end)
                     end)
                 end
     
                 function DinoElement:CreateDropdown(dropdowntitle, list, dropdowncallback)
                     list = list or {}
     
                     local DropdownHolder = Instance.new("Frame")
                     local DropdownHolderUICorner = Instance.new("UICorner")
                     local DropdownImage = Instance.new("ImageLabel")
                     local DropdownHolderTitle = Instance.new("TextLabel")
                     local DropdownButton = Instance.new("TextButton")
                     local DropdownIn = Instance.new("Frame")
                     local DropdownInList = Instance.new("UIListLayout")
                     local DropdownSelectedTitle = Instance.new("TextLabel")
                     local DropdownHolderUIStroke = Instance.new("UIStroke")
                     
                     --Properties:
                     
                     DropdownHolder.Name = dropdowntitle or "DropdownHolder"
                     DropdownHolder.Parent = SectionIn
                     DropdownHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     DropdownHolder.BorderSizePixel = 0
                     DropdownHolder.ClipsDescendants = true
                     DropdownHolder.Size = UDim2.new(0, 350, 0, 25)
                     
                     DropdownHolderUICorner.CornerRadius = UDim.new(0, 1)
                     DropdownHolderUICorner.Name = "DropdownHolderUICorner"
                     DropdownHolderUICorner.Parent = DropdownHolder
                     
                     DropdownImage.Name = "DropdownImage"
                     DropdownImage.Parent = DropdownHolder
                     DropdownImage.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     DropdownImage.BackgroundTransparency = 1.000
                     DropdownImage.BorderSizePixel = 0
                     DropdownImage.Position = UDim2.new(0, 5, 0, 3)
                     DropdownImage.Size = UDim2.new(0, 18, 0, 18)
                     DropdownImage.Image = "rbxassetid://11417570443"
                     DropdownImage.ImageColor3 = Color3.fromRGB(200, 200, 200)
                     
                     DropdownHolderTitle.Name = "DropdownHolderTitle"
                     DropdownHolderTitle.Parent = DropdownHolder
                     DropdownHolderTitle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     DropdownHolderTitle.BackgroundTransparency = 1.000
                     DropdownHolderTitle.BorderSizePixel = 0
                     DropdownHolderTitle.Position = UDim2.new(0, 25, 0, 0)
                     DropdownHolderTitle.Size = UDim2.new(0, 175, 0, 25)
                     DropdownHolderTitle.Font = Enum.Font.GothamSemibold
                     DropdownHolderTitle.Text = dropdowntitle or "Dropdown | Drop Me !"
                     DropdownHolderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                     DropdownHolderTitle.TextSize = 13.000
                     DropdownHolderTitle.TextXAlignment = Enum.TextXAlignment.Left
                     
                     DropdownButton.Name = "DropdownButton"
                     DropdownButton.Parent = DropdownHolder
                     DropdownButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     DropdownButton.BackgroundTransparency = 1.000
                     DropdownButton.BorderSizePixel = 0
                     DropdownButton.Size = UDim2.new(0, 350, 0, 25)
                     DropdownButton.ZIndex = 2
                     DropdownButton.Font = Enum.Font.SourceSans
                     DropdownButton.Text = ""
                     DropdownButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                     DropdownButton.TextSize = 14.000
                     
                     DropdownIn.Name = "DropdownIn"
                     DropdownIn.Parent = DropdownHolder
                     DropdownIn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                     DropdownIn.BackgroundTransparency = 1.000
                     DropdownIn.BorderSizePixel = 0
                     DropdownIn.Position = UDim2.new(0, 0, 0, 25)
                     DropdownIn.Size = UDim2.new(0, 350, 0, 1)
                     
                     DropdownInList.Name = "DropdownInList"
                     DropdownInList.Parent = DropdownIn
                     DropdownInList.SortOrder = Enum.SortOrder.LayoutOrder
                     
                     DropdownSelectedTitle.Name = "DropdownSelectedTitle"
                     DropdownSelectedTitle.Parent = DropdownHolder
                     DropdownSelectedTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     DropdownSelectedTitle.BorderSizePixel = 0
                     DropdownSelectedTitle.Position = UDim2.new(0, 345, 0, 2)
                     DropdownSelectedTitle.Size = UDim2.new(0, -50, 0, 20)
                     DropdownSelectedTitle.Font = Enum.Font.GothamSemibold
                     DropdownSelectedTitle.Text = "NONE"
                     DropdownSelectedTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
                     DropdownSelectedTitle.TextSize = 12.000
     
                     DropdownHolderUIStroke.Name = "DropdownHolderUIStroke"
                     DropdownHolderUIStroke.Parent = TextBoxToggle
                     DropdownHolderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                     DropdownHolderUIStroke.Color = Color3.fromRGB(255, 255, 255)
                     DropdownHolderUIStroke.LineJoinMode = Enum.LineJoinMode.Round
                     DropdownHolderUIStroke.Thickness = 1.6
                     DropdownHolderUIStroke.Transparency = 0
                     DropdownHolderUIStroke.Enabled = true
                     DropdownHolderUIStroke.Archivable = true
     
                     -- Don't Touch This Script Or It Will Mess Up --
     
                     DropdownButton.MouseButton1Click:Connect(function()
                         DropdownHolder:TweenSize(UDim2.new(0, 350, 0, 25 + DropdownInList.AbsoluteContentSize.Y), "InOut", "Quad", 0.08, true)
                     end)
     
                     DropdownSelectedTitle.Size = UDim2.new(0, 0 - DropdownSelectedTitle.TextBounds.X - 5, 0, 20)
                     DropdownSelectedTitle:GetPropertyChangedSignal("Text"):Connect(function()
                         DropdownSelectedTitle.Size = UDim2.new(0, 0 - DropdownSelectedTitle.TextBounds.X - 5, 0, 20)
                     end)
     
                     for listindex, listvalue in next, list do
                         local ListButton = Instance.new("TextButton")
     
                         --Properties:
                         
                         ListButton.Name = listvalue or "ListButton"
                         ListButton.Parent = DropdownIn
                         ListButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                         ListButton.BorderSizePixel = 0
                         ListButton.Size = UDim2.new(0, 350, 0, 25)
                         ListButton.AutoButtonColor = false
                         ListButton.Font = Enum.Font.GothamSemibold
                         ListButton.Text = listvalue or "List"
                         ListButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                         ListButton.TextSize = 14.000
     
                         ListButton.MouseButton1Click:Connect(function()
                             DropdownHolder:TweenSize(UDim2.new(0, 350, 0, 25), "InOut", "Quad", 0.08, true)
                             DropdownSelectedTitle.Text = ListButton.Text
                             pcall(function()
                                 dropdowncallback(ListButton.Text)
                             end)
                         end)
                         
                     end
     
                     local DinoDropdown = {}
     
                     function DinoDropdown:RefreshDropdown(newlist)
                         newlist = newlist or {}
                         for _, alllist in pairs(DropdownIn:GetChildren()) do
                             if alllist:IsA("TextButton") then
                                 alllist:Destroy()
                             end
                         end
     
                         for newlistindex, newlistvalue in next, newlist do
                             local ListButton = Instance.new("TextButton")
     
                             --Properties:
                             
                             ListButton.Name = newlistvalue or "ListButton"
                             ListButton.Parent = DropdownIn
                             ListButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                             ListButton.BorderSizePixel = 0
                             ListButton.Size = UDim2.new(0, 350, 0, 25)
                             ListButton.AutoButtonColor = false
                             ListButton.Font = Enum.Font.GothamSemibold
                             ListButton.Text = newlistvalue or "List"
                             ListButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                             ListButton.TextSize = 14.000
         
                             ListButton.MouseButton1Click:Connect(function()
                                 DropdownHolder:TweenSize(UDim2.new(0, 350, 0, 25), "InOut", "Quad", 0.08, true)
                                 DropdownSelectedTitle.Text = ListButton.Text
                                 pcall(function()
                                     dropdowncallback(ListButton.Text)
                                 end)
                             end)
                         end
                     end
     
                     return DinoDropdown
                 end
     
                 function DinoElement:CreateLabel(labeltitle)
                     local DropdownHolderTitle = Instance.new("TextLabel")
     
                     --Properties:
                     
                     DropdownHolderTitle.Name = labeltitle or "DropdownHolderTitle"
                     DropdownHolderTitle.Parent = SectionIn
                     DropdownHolderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                     DropdownHolderTitle.BackgroundTransparency = 1.000
                     DropdownHolderTitle.BorderSizePixel = 0
                     DropdownHolderTitle.Position = UDim2.new(0, 5, 0, 190)
                     DropdownHolderTitle.Size = UDim2.new(0, 350, 0, 15)
                     DropdownHolderTitle.Font = Enum.Font.GothamSemibold
                     DropdownHolderTitle.Text = labeltitle or "This Is A Description"
                     DropdownHolderTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
                     DropdownHolderTitle.TextSize = 13.000
                     DropdownHolderTitle.TextXAlignment = Enum.TextXAlignment.Left
     
                     local DinoLabel = {}
     
                     function DinoLabel:ChangeLabel(newlabeltitle)
                         DropdownHolderTitle.Text = newlabeltitle
                     end
     
                     return DinoLabel
                 end
     
                 return DinoElement
             end
             
             return DinoPage
         end
     
         return DinoWindow
     
     end
     
     local DinoWindow = Dino:CreateWindow("")
     local DinoPage = DinoWindow:NewPage("Main")
     local Home = DinoPage:NewSection("Blox Fruit Event")

     Home:CreateButton("AutoConfetti AllWorld",function(value)
repeat wait(1) until game:IsLoaded()

_G.AutoConfetti = true
_G.Team = 'Pirate'
_G.Time = 30

if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") then
	repeat wait()
		if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
			if _G.Team == "Pirate" then
				for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
					v.Function()
				end
			elseif _G.Team == "Marine" then
				for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
					v.Function()
				end
			else
				for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
					v.Function()
				end
			end
		end
	until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
end

repeat wait() until not game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam")

function TP(Point)
	local Ply = game.Players.LocalPlayer
	local Char = Ply.Character
--	repeat
	Char.Humanoid:ChangeState(15)
	Char.HumanoidRootPart.CFrame = Point
	wait()
	Char.HumanoidRootPart.CFrame = Point
--	until (Char.HumanoidRootPart.Position - Point.Position).Magnitude <= 20
end

spawn(function()
while task.wait() do
pcall(function()
if _G.AutoConfetti then
for i,v in pairs(game.Workspace.NPCs:GetChildren()) do
	game:GetService("ReplicatedStorage").Remotes.Celebration:InvokeServer('TalkNpc',workspace.NPCs[v.Name])
end
end
end)
end
end)

spawn(function()
while task.wait() do
pcall(function()
	if _G.AutoConfetti then
		if game.PlaceId == 4442272183 then
			TP(CFrame.new(-11.848626136779785, 19.311767578125, 2828.531005859375))
			TP(CFrame.new(-375.93408203125, 73.11296844482422, 1180.5146484375))
			TP(CFrame.new(-378.0177001953125, 73.05511474609375, 287.2165222167969))
			TP(CFrame.new(-2070.090576171875, 72.37596893310547, -2689.849853515625))
			TP(CFrame.new(-5365.74462890625, 9.003767013549805, -705.3399658203125))
			TP(CFrame.new(880.24462890625, 125.09214782714844, 32865.26171875))
			TP(CFrame.new(-5610.93798828125, 18.35700798034668, -5015.65869140625))
			TP(CFrame.new(-3014.4755859375, 29.575407028198242, -9777.16015625))
			TP(CFrame.new(113.77246856689453, 401.45697021484375, -5192.54248046875))
			TP(CFrame.new(5585.3740234375, 12.449106216430664, -5954.33349609375))
		elseif game.PlaceId == 7449423635 then
			TP(CFrame.new(-259.380126953125, 6.764979839324951, 5254.09912109375))
			TP(CFrame.new(-1932.3507080078125, 13.824933052062988, -11636.8515625))
			TP(CFrame.new(-929.170166015625, 7.802646160125732, -10826.3876953125))
			TP(CFrame.new(497.3184509277344, 24.76936149597168, -12418.55859375))
			TP(CFrame.new(-47.42597961425781, 16.97955322265625, -11992.779296875))
			TP(CFrame.new(2245.78271484375, 12.776296615600586, -6353.974609375))
			TP(CFrame.new(-9515.0009765625, 142.1398468017578, 5534.05029296875))
			TP(CFrame.new(-9512.8896484375, 21.139892578125, 4641.02978515625))
			TP(CFrame.new(4732.6533203125, 51.589698791503906, -1414.252197265625))
			TP(CFrame.new(5277.3388671875, 602.0785522460938, 363.35223388671875))
			TP(CFrame.new(3371.987060546875, 38.98302459716797, 1593.1405029296875))
			TP(CFrame.new(-2045.0103759765625, 38.138248443603516, -10041.935546875))
			TP(CFrame.new(-5116.79931640625, 314.550537109375, -2964.70068359375))
			TP(CFrame.new(-4598.1025390625, 16.455780029296875, -2705.09619140625))
			TP(CFrame.new(-6069.4306640625, 16.455780029296875, -2160.60205078125))
			TP(CFrame.new(-11385.6767578125, 331.75823974609375, -10405.916015625))
			TP(CFrame.new(-9603.1591796875, 46.55657196044922, -8365.3828125))
			TP(CFrame.new(-12545.2353515625, 337.20330810546875, -7454.07470703125))
		else
			TP(CFrame.new(-2550.043212890625, 6.890709400177002, 2047.015625))
			TP(CFrame.new(-1248.0438232421875, 2.6870851516723633, 1716.0859375))
			TP(CFrame.new(-459.51275634765625, 7.687240123748779, 1455.679443359375))
			TP(CFrame.new(-572.7285766601562, 7.687240123748779, 1797.2501220703125))
			TP(CFrame.new(781.9508666992188, 5.761781215667725, 1492.8056640625))
			TP(CFrame.new(949.3020629882812, 16.55164909362793, 1421.4573974609375))
			TP(CFrame.new(1115.21484375, 7.338680744171143, -1159.033935546875))
			TP(CFrame.new(3876.05029296875, 5.4081878662109375, -1907.011474609375))
			TP(CFrame.new(5087.5341796875, 48.43275833129883, 4126.625))
			TP(CFrame.new(-1135.5067138671875, 4.787090301513672, 3821.385498046875))
			TP(CFrame.new(881.5269775390625, 3.4771769046783447, 4100.76611328125))
			TP(CFrame.new(-4830.9208984375, 20.68707275390625, 4373.51953125))
			TP(CFrame.new(-5206.47998046875, 4.308171272277832, 8430.990234375))
			TP(CFrame.new(-1324.8131103515625, 11.88819408416748, 500.3249816894531))
			TP(CFrame.new(-1439.505615234375, 7.32259464263916, -2801.103515625))
			TP(CFrame.new(-4935.75830078125, 2.8822989463806152, -2325.49462890625))
			TP(CFrame.new(-4874.67578125, 717.705078125, -2625.676513671875))
			TP(CFrame.new(-7884.97900390625, 5545.6123046875, -361.72772216796875))
			TP(CFrame.new(4861.38330078125, 5.687756061553955, 741.5126342773438))
		end
	end
end)
end
end)

--[[spawn(function()
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
	vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	wait(1)
	vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
end)]]--

tick = 0
t1 =  _G.Time
tl =  _G.Time - 1

repeat
    wait(1)
    tick = tick + 1
    print(tick)
    if tick == t1 or tick > tl then
        local ts = game:GetService("TeleportService") local p = game.Players.LocalPlayer ts:Teleport(game.PlaceId, p)
    end
until tick == t1 or tick > tl
  end)


Home:CreateButton("Stop Fram",function(value)
  _G.AutoConfetti = false
end)

Home:CreateButton("Teleport to World 1",function(value)
  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
end)

Home:CreateButton("Teleport to World 2",function(value)
  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
end)

Home:CreateButton("Teleport to World 3",function(value)
  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
end)
